// Generated by Dagger (https://dagger.dev).
package com.atomtesttask.citylist.presenter;

import com.atomtesttask.citylist.dataprovider.DataProvider;
import com.atomtesttask.domain.usecases.GetChargingStationsDataUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import navigation.compose.NavigationManager;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FeatureCityListViewModel_Factory implements Factory<FeatureCityListViewModel> {
  private final Provider<NavigationManager> navigationManagerProvider;

  private final Provider<GetChargingStationsDataUseCase> getChargingStationsDataUseCaseProvider;

  private final Provider<DataProvider> dataProvider;

  public FeatureCityListViewModel_Factory(Provider<NavigationManager> navigationManagerProvider,
      Provider<GetChargingStationsDataUseCase> getChargingStationsDataUseCaseProvider,
      Provider<DataProvider> dataProvider) {
    this.navigationManagerProvider = navigationManagerProvider;
    this.getChargingStationsDataUseCaseProvider = getChargingStationsDataUseCaseProvider;
    this.dataProvider = dataProvider;
  }

  @Override
  public FeatureCityListViewModel get() {
    return newInstance(navigationManagerProvider.get(), getChargingStationsDataUseCaseProvider.get(), dataProvider.get());
  }

  public static FeatureCityListViewModel_Factory create(
      Provider<NavigationManager> navigationManagerProvider,
      Provider<GetChargingStationsDataUseCase> getChargingStationsDataUseCaseProvider,
      Provider<DataProvider> dataProvider) {
    return new FeatureCityListViewModel_Factory(navigationManagerProvider, getChargingStationsDataUseCaseProvider, dataProvider);
  }

  public static FeatureCityListViewModel newInstance(NavigationManager navigationManager,
      GetChargingStationsDataUseCase getChargingStationsDataUseCase, DataProvider dataProvider) {
    return new FeatureCityListViewModel(navigationManager, getChargingStationsDataUseCase, dataProvider);
  }
}
